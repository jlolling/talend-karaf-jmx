<%@ jet 
	imports="
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.utils.NodeUtil
		java.util.List
    	java.util.Map
	" 
%>
<% 
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode) codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String serviceMetricsConnName = null;
	List<? extends IConnection> serviceMetricsConns = node.getOutgoingConnections("SERVICE_METRICS");
	if (serviceMetricsConns != null && serviceMetricsConns.isEmpty() == false) {
	    IConnection outConn = serviceMetricsConns.get(0);
	    serviceMetricsConnName = outConn.getName();
	}
	String systemMetricsConnName = null;
	List<? extends IConnection> systemMetricsConns = node.getOutgoingConnections("SYSTEM_METRICS");
	if (systemMetricsConns != null && systemMetricsConns.isEmpty() == false) {
	    IConnection outConn = systemMetricsConns.get(0);
	    systemMetricsConnName = outConn.getName();
	}
	boolean isKaraf = "true".equals(ElementParameterParser.getValue(node, "__IS_KARAF__"));
	String jmxUrl = ElementParameterParser.getValue(node, "__JMX_URL__");
	String jmxUser = ElementParameterParser.getValue(node, "__JMX_USER__");
	String jmxPassword = ElementParameterParser.getValue(node, "__JMX_PASSWORD__");
	String server = ElementParameterParser.getValue(node, "__KARAF_SERVER__");
	String instance = ElementParameterParser.getValue(node, "__KARAF_INSTANCE__");
	String jmxPort = ElementParameterParser.getValue(node, "__JMX_PORT__");
	String jstatdPort = ElementParameterParser.getValue(node, "__JSTATD_PORT__");
	String filter = ElementParameterParser.getValue(node, "__FEATURE_FILTER_REGEX__");
	if (filter == null || filter.trim().isEmpty()) {
		filter = "null";
	}
	boolean ignoreSummaryMetrics = "true".equals(ElementParameterParser.getValue(node, "__FEATURE_FILTER_IS_OPERATION__"));
	String interval = ElementParameterParser.getValue(node, "__TIME_INTERVAL__");
	String intervalServiceRefresh = ElementParameterParser.getValue(node, "__TIME_INTERVAL_BETWEEN_SERVICE_REFRESH__");
%>
	de.jlo.talendcomp.karaf.jmx.KarafClient client_<%=cid%> = new de.jlo.talendcomp.karaf.jmx.KarafClient();
	client_<%=cid%>.setJmxUser(<%=jmxUser%>);
	client_<%=cid%>.setJmxPassword(<%=jmxPassword%>);
<%	if (isKaraf) { %>
	client_<%=cid%>.setKarafRemoteJmxUrl(<%=server%>, <%=jmxPort%>, <%=instance%>, <%=jstatdPort%>);
<%	} else { %>
	client_<%=cid%>.setJmxUrl(<%=jmxUrl%>);
<%	} %>
	try {
		client_<%=cid%>.connect();
	} catch (Exception e) {
		globalMap.put("<%=cid%>_ERROR_MESSAGE", "Connect to jmx failed: " + e.getMessage());
		throw new Exception("Connect to jmx failed: URL: " + client_<%=cid%>.getJmxServiceUrl(), e);
	}
	globalMap.put("client_<%=cid%>", client_<%=cid%>);
	de.jlo.talendcomp.karaf.jmx.CXFMetricsCollector <%=cid%> = new de.jlo.talendcomp.karaf.jmx.CXFMetricsCollector(client_<%=cid%>);
	de.jlo.talendcomp.karaf.jmx.JVMMetricsCollector <%=cid%>_jvm = new de.jlo.talendcomp.karaf.jmx.JVMMetricsCollector(client_<%=cid%>);
<%	if (interval != null && interval.trim().isEmpty() == false) { %>
	<%=cid%>.setInterval(<%=interval%>);
<%	} %>
<%	if (intervalServiceRefresh != null && intervalServiceRefresh.trim().isEmpty() == false) { %>
	<%=cid%>.setTimeBetweenServiceRefresh(<%=intervalServiceRefresh%>);
<%	} %>
    <%=cid%>.setIgnoreSummaryMetrics(<%=ignoreSummaryMetrics%>);
	java.util.List<de.jlo.talendcomp.karaf.jmx.ServiceMetric> list_<%=cid%> = new java.util.ArrayList<de.jlo.talendcomp.karaf.jmx.ServiceMetric>();
	<%=cid%>.setArtifactPattern(<%=filter%>);
	while (<%=cid%>.next()) {
		de.jlo.talendcomp.karaf.jmx.SystemMetrics <%=cid%>_systemMetrics = null;
		try {
			list_<%=cid%> = <%=cid%>.fetchServiceMetrics();
			<%=cid%>_systemMetrics = <%=cid%>_jvm.fetchSystemMetrics();
		} catch (Exception e) {
			globalMap.put("<%=cid%>_ERROR_MESSAGE", "Fetch metrics failed: " + e.getMessage());
			throw new Exception("Fetch metrics failed: " + e.getMessage(), e);
		}
		globalMap.put("<%=cid%>_process_cpu_load", <%=cid%>_systemMetrics.getProcessCpuLoad());
		globalMap.put("<%=cid%>_system_cpu_load", <%=cid%>_systemMetrics.getSystemCpuLoad());
		globalMap.put("<%=cid%>_heap_memory_used", <%=cid%>_systemMetrics.getHeapMemoryUsed());
		globalMap.put("<%=cid%>_heap_memory_max", <%=cid%>_systemMetrics.getHeapMemoryMax());
		globalMap.put("<%=cid%>_timestamp", <%=cid%>_systemMetrics.getTimestamp());
		int count_<%=cid%> = 0;
		globalMap.put("<%=cid%>_count_service_metrics", list_<%=cid%>.size());
		boolean <%=cid%>_no_service = list_<%=cid%>.isEmpty();
		int <%=cid%>_max_index = (<%=cid%>_no_service ? 1 : list_<%=cid%>.size());
		for (int <%=cid%>_metric_index = 0; <%=cid%>_metric_index < <%=cid%>_max_index; <%=cid%>_metric_index++) {
			if (<%=cid%>_no_service == false) {
				de.jlo.talendcomp.karaf.jmx.ServiceMetric <%=cid%>_metric = list_<%=cid%>.get(<%=cid%>_metric_index);
				globalMap.put("<%=cid%>_service_endpoint", <%=cid%>_metric.getServiceName());
				globalMap.put("<%=cid%>_service_operation", <%=cid%>_metric.getOperation());
				globalMap.put("<%=cid%>_avg_duration", <%=cid%>_metric.getDurationMean());
				globalMap.put("<%=cid%>_timestamp", <%=cid%>_metric.getTimestamp());
				globalMap.put("<%=cid%>_count_abs", <%=cid%>_metric.getCount());
				globalMap.put("<%=cid%>_count_diff", <%=cid%>_metric.getCountDiff());
<%	if (serviceMetricsConnName != null) { %>
				<%=serviceMetricsConnName%> = new <%=serviceMetricsConnName%>Struct();
				<%=serviceMetricsConnName%>.service_endpoint = <%=cid%>_metric.getServiceName();
				<%=serviceMetricsConnName%>.service_operation = <%=cid%>_metric.getOperation();
				<%=serviceMetricsConnName%>.avg_duration = <%=cid%>_metric.getDurationMean();
				<%=serviceMetricsConnName%>.timestamp = <%=cid%>_metric.getTimestamp();
				<%=serviceMetricsConnName%>.count_abs = <%=cid%>_metric.getCount();
				<%=serviceMetricsConnName%>.count_diff = <%=cid%>_metric.getCountDiff();
				<%=serviceMetricsConnName%>.is_last_metric = (<%=cid%>_metric_index == <%=cid%>_max_index - 1);
			} else {
				<%=serviceMetricsConnName%> = null;
<%	} %>
			}
<%	if (systemMetricsConnName != null) { %>
			if (count_<%=cid%> == 0) {
				<%=systemMetricsConnName%> = new <%=systemMetricsConnName%>Struct();
				<%=systemMetricsConnName%>.jvm_process_cpu_load = <%=cid%>_systemMetrics.getProcessCpuLoad();
				<%=systemMetricsConnName%>.jvm_system_cpu_load = <%=cid%>_systemMetrics.getSystemCpuLoad();
				<%=systemMetricsConnName%>.jvm_heap_memory_used = <%=cid%>_systemMetrics.getHeapMemoryUsed();
				<%=systemMetricsConnName%>.jvm_heap_memory_max = <%=cid%>_systemMetrics.getHeapMemoryMax();
				<%=systemMetricsConnName%>.timestamp = <%=cid%>_systemMetrics.getTimestamp();
			} else {
				<%=systemMetricsConnName%> = null;
			}
<%	} %>
